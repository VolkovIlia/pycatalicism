#!/usr/bin/python

from pycatalicism.furnace.owen_tpm101_controller import Owen_TPM101_Controller
from pycatalicism.chromatograph.chromatec_crystal_5000 import ChromatecCrystal5000
from pycatalicism.chromatograph.chromatec_control_panel_modbus import ChromatecControlPanelModbus
from pycatalicism.chromatograph.chromatec_analytic_modbus import ChromatecAnalyticModbus

furnace = Owen_TPM101_Controller(port=furnace_port, baudrate=furnace_baudrate, parity=furnace_parity, stopbits=furnace_stopbits, timeout=furnace_timeout, write_timeout=furnace_write_timeout, rtscts=furnace_rtscts, address=furnace_address, rsdl=furnace_rsdl, address_len=furnace_address_len)
control_panel_modbus = ChromatecControlPanelModbus(modbus_id=config.control_panel_modbus_id, working_status_input_address=config.working_status_input_address, serial_number_input_address=config.serial_number_input_address, connection_status_input_address=config.connection_status_input_address, method_holding_address=config.method_holding_address, chromatograph_command_holding_address=config.chromatograph_command_holding_address, application_command_holding_address=config.application_command_holding_address)
analytic_modbus = ChromatecAnalyticModbus(modbus_id=config.analytic_modbus_id, sample_name_holding_address=config.sample_name_holding_address, chromatogram_purpose_holding_address=config.chromatogram_purpose_holding_address, sample_volume_holding_address=config.sample_volume_holding_address, sample_dilution_holding_address=config.sample_dilution_holding_address, operator_holding_address=config.operator_holding_address, column_holding_address=config.column_holding_address, lab_name_holding_address=config.lab_name_holding_address)
chromatograph = ChromatecCrystal5000(control_panel=chromatograph_control_panel, analytic=chromatograph_analytic, methods=chromatograph_methods)
